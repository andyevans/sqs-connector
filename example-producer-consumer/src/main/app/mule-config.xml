<?xml version="1.0" encoding="UTF-8"?>
<!-- 

    Mule Amazon Connector

    Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com

    The software in this package is published under the terms of the CPAL v1.0
    license, a copy of which has been included with this distribution in the
    LICENSE.txt file.

-->
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:spring="http://www.springframework.org/schema/beans"
      xmlns:http="http://www.mulesoft.org/schema/mule/http"
      xmlns:sqs="http://www.mulesoft.org/schema/mule/sqs"
      xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting"
      xmlns:context="http://www.springframework.org/schema/context"
      xmlns:mongo="http://www.mulesoft.org/schema/mule/mongo"
      xmlns:json="http://www.mulesoft.org/schema/mule/json"
      xsi:schemaLocation="
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
            http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/3.2/mule.xsd
            http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/3.2/mule-scripting.xsd
            http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/3.0/mule-http.xsd
            http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/3.2/mule-json.xsd
            http://www.mulesoft.org/schema/mule/mongo http://www.mulesoft.org/schema/mule/mongo/2.0/mule-mongo.xsd
            http://www.mulesoft.org/schema/mule/sqs http://www.mulesoft.org/schema/mule/sqs/1.0/mule-sqs.xsd">
                                              
    <http:connector name="connector.http.mule.default"
                    enableCookies="true" 
                    keepAlive="true"/>
    
    <sqs:config accessKey="${sqsAccessKey}" 
                secretAccessKey="${sqsSecretAccessKey}"
                queueName="mule-test"/>
    
    <mongo:config username="${mongoUsername}"
                  password="${mongoPassword}" />
    
    <flow name="producerEchoInMongo">
        <description>Puts a new status in the mongo DB.</description>
        <inbound-endpoint address="http://localhost:9090/add-status-to-mongo"/>
        <logger level="INFO" message="PULL FROM THE QUEUE: #[payload]" />
        <expression-transformer expression="#[header:inbound:status]" evaluator="string"/>
        <sqs:send-message/>
    </flow>
    
    <flow name="consumer">
        <description>Get a message from the queue, and add it to a mongo DB.</description>
        <sqs:receive-messages retries="3" />
        <scripting:component>
            <scripting:script engine="groovy">
                <![CDATA[
                 import org.apache.commons.lang.StringEscapeUtils; 
                
                 String str = " { "; 
                 str += "\"text\" : \"" + StringEscapeUtils.escapeJavaScript(payload) + "\" } "; 
                
                 return str;       
                 ]]> 
            </scripting:script>
        </scripting:component>
        <logger level="INFO" message="PULL FROM THE QUEUE: #[payload]" />
        <expression-transformer expression=' #[payload] ' evaluator="string"/>
        <mongo:json-to-dbobject />
        <mongo:insert-object  collection="status" dbObject-ref='#[payload]'/>
    </flow>

</mule>
